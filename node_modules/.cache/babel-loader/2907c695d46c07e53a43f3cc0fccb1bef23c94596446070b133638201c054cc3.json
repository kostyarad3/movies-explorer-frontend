{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.baseUrl;\n    this._headers = config.headers;\n    this._credentials = config.credentials;\n  }\n  _getResponseData(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  }\n  getInitialData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      credentials: this._credentials\n    }).then(response => this._getResponseData(response));\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      credentials: this._credentials\n    }).then(response => this._getResponseData(response));\n  }\n  editUserInfo(name, email) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      credentials: this._credentials,\n      body: JSON.stringify({\n        name: name,\n        email: email\n      })\n    }).then(response => this._getResponseData(response));\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      credentials: this._credentials\n    }).then(response => this._getResponseData(response));\n  }\n}\nconst api = new Api({\n  // baseUrl: \"https://api.mesto.kostyarad.nomoreparties.sbs\",\n  credentials: \"include\",\n  baseUrl: \"http://localhost:3000\"\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","baseUrl","_headers","headers","_credentials","credentials","_getResponseData","response","ok","json","Promise","reject","status","getInitialData","all","getUserInfo","getInitialCards","fetch","method","Authorization","localStorage","getItem","then","editUserInfo","name","email","body","JSON","stringify","deleteCard","cardId","api"],"sources":["/Users/konstantinradcenko/dev/Diploma/movies-explorer-frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(config) {\n    this._url = config.baseUrl;\n    this._headers = config.headers;\n    this._credentials = config.credentials;\n  }\n\n  _getResponseData(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  }\n\n  getInitialData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      credentials: this._credentials,\n    }).then((response) => this._getResponseData(response));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      credentials: this._credentials,\n    }).then((response) => this._getResponseData(response));\n  }\n\n  editUserInfo(name, email) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      credentials: this._credentials,\n      body: JSON.stringify({\n        name: name,\n        email: email,\n      }),\n    }).then((response) => this._getResponseData(response));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      credentials: this._credentials,\n    }).then((response) => this._getResponseData(response));\n  }\n\n}\n\nconst api = new Api({\n  // baseUrl: \"https://api.mesto.kostyarad.nomoreparties.sbs\",\n  credentials: \"include\",\n  baseUrl: \"http://localhost:3000\",\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}